// Code generated by MockGen. DO NOT EDIT.
// Source: exchange_metadata.go

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	context "context"
	reflect "reflect"

	model "github.com/Mestrace/orderbook/domain/model"
	gomock "github.com/golang/mock/gomock"
)

// MockExchangeMetadata is a mock of ExchangeMetadata interface.
type MockExchangeMetadata struct {
	ctrl     *gomock.Controller
	recorder *MockExchangeMetadataMockRecorder
}

// MockExchangeMetadataMockRecorder is the mock recorder for MockExchangeMetadata.
type MockExchangeMetadataMockRecorder struct {
	mock *MockExchangeMetadata
}

// NewMockExchangeMetadata creates a new mock instance.
func NewMockExchangeMetadata(ctrl *gomock.Controller) *MockExchangeMetadata {
	mock := &MockExchangeMetadata{ctrl: ctrl}
	mock.recorder = &MockExchangeMetadataMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExchangeMetadata) EXPECT() *MockExchangeMetadataMockRecorder {
	return m.recorder
}

// QueryByName mocks base method.
func (m *MockExchangeMetadata) QueryByName(ctx context.Context, param *model.QueryMetadataParam) (*model.QueryMetadataData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryByName", ctx, param)
	ret0, _ := ret[0].(*model.QueryMetadataData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryByName indicates an expected call of QueryByName.
func (mr *MockExchangeMetadataMockRecorder) QueryByName(ctx, param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryByName", reflect.TypeOf((*MockExchangeMetadata)(nil).QueryByName), ctx, param)
}

// Update mocks base method.
func (m *MockExchangeMetadata) Update(ctx context.Context, param *model.UpdateMetadataParam) (*model.UpdateMetadataData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, param)
	ret0, _ := ret[0].(*model.UpdateMetadataData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockExchangeMetadataMockRecorder) Update(ctx, param interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockExchangeMetadata)(nil).Update), ctx, param)
}
